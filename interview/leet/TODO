
# TODO list

# Algorithms in Leetcode

* Finish Binary Indexed Tree in topcoder (Done)
    * Finish `493_Reverse_Pairs.py` and similar problems
	* BIT (Done)
        * Learn bisect and 493's fastest solution
	* Mergesort
    * Finish `315_Count_of_Smaller_Numbers_After_Self.py` with BIT (Done) and merge sort
    * Finish `327_Count_of_Range_Sum.py` with BIT (Done) and merge sort (Stefan)
        * Fun4Leetcode's solution 
	* Fastest solution
* Finish Segment Tree in top coder, it's "range minimum query and lowest common ancestor"
    * `699_Falling_Squares.py` (Done)
    * Last couple of examples in codeforce.
* Finish KMP algorithm

# Algorithms in Princeton Algorithms

* Finish Directed Graphs
* Finish Shortest Path Lecture

# Problem discussion

* `336_Palindrome_Pairs.py` fastest solution
* `472_Concatenated_Words.py` fastest solution
* `378_Kth_Smallest_Element_in_a_Sorted_Matrix.py` bisect solution
* Edit Distance fastest solution
* `406_Queue_Reconstruction_by_Height.py` fastest solution
* `97_Interleaving_String.py`: caikehe's DFS and BFS solutions.
* `132_Palindrome_Partitioning_II_v3.py`: hongyu9310's 3rd solutions or the 3rd fastest solution.
* `174_Dungeon_Game.py`: fastest solution
* `368_Largest_Divisible_Subset.py`: fastest solution
* `787_Cheapest_Flights_Within_K_Stops.py`: fastest solution
* `279_Perfect_Squares.py` Stefan math solution
* `332_Reconstruct_Itinerary.py` Stefan's solution
* `212_Word_Search_II.py` The fastest solution and Stefan's complex number solution
* `957_Prison_Cells_After_N_Days.py` lee315's cleaner solution.
* `463_Island_Perimeter.py` Stefan's and fastest solution
* `15_3Sum.py` fastest solution
* `491_Increasing_Subsequences.py` Stefan and dp solutions
* `079_Word_Search.py` fastest solution
* `135_Candy.py` O(n) solution
* `210_Course_Schedule_II.py` fastest BFS solution
* `675_Cut_Off_Trees_for_Golf_Event.py` Stefan's Hadlock algorithm and the fastest solution
* `437_Path_Sum_III.py` pre sum solution
* `1286_Iterator_for_Combination.py` O(k) on the fly solution
* `835_Image_Overlap.py` 2nd fastest solution
* `57_Insert_Interval.py` Stefan's 3rd version.
* (DONE) `503_Next_Greater_Element_II.py` py 100% solution.
* (DONE) `456_132_Patterns.py` Fun4Leetcode's final solution

# Good articles from leetcode

* `714_Best_Time_to_Buy_and_Sell_Stock_with_Transaction_Fee.py` Fun4Leetcode

# Algorithms from system design

* LRU, checkout python implementation
* 9.4.1 Serialize/deserialize trie
